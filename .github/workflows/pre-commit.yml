name: Pre-commit actions for Delphix Virtualization SDK

on: [push]

jobs:
  pytest38:
    name: Test ${{ matrix.package }} on ${{ matrix.os }} using pytest (Python 3.8)
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.8]
        os: [ubuntu-latest, macos-latest, windows-latest]
        package: [common, libs, platform, tools]

    steps:
    - name: Checkout ${{ matrix.package }} project
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install ${{ matrix.package }} dependencies
      working-directory: ${{ matrix.package }}
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt --find-links https://test.pypi.org/simple/dvp-api/

    - name: Install ${{ matrix.package }} project
      working-directory: ${{ matrix.package }}
      run: |
        pip install . --find-links https://test.pypi.org/simple/dvp-api/

    - name: Test ${{ matrix.package }} project with pytest
      working-directory: ${{ matrix.package }}
      run: |
        python -m pytest src/test/python

    - name: Install flake8
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        pip install flake8

    - name: Run flake8 for linting src directory
      if: ${{ matrix.os == 'ubuntu-latest' }}
      working-directory: ${{ matrix.package }}
      run: python -m flake8 src/main/python --max-line-length 88

    - name: Run flake8 for linting test directory
      if: ${{ matrix.os == 'ubuntu-latest' }}
      working-directory: ${{ matrix.package }}
      run: python -m flake8 src/test/python --max-line-length 88
